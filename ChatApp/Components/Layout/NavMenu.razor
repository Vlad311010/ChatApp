@using ChatApp.Client.Models
@using ChatApp.Data
@inject IChatsRepository Chats

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">ChatApp</a>
        @if (HttpContext.User.Identity!.IsAuthenticated) 
        {
            <a class="navbar-brand">@HttpContext.User.Identity.Name</a>
        }
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        @if (HttpContext.User.Identity!.IsAuthenticated && chats != null && chats.Length > 0)
        {
            <div class="nav-item px-3">
                @foreach (ChatGroup chat in chats)
                {

                    <NavLink class="nav-link" href="@("chat/" + chat.Name)">
                        @(chat.Name + " " + chat.Memebers?.Count())
                    </NavLink>
                }
            </div>
        }

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="home">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

    </nav>
</div>

@code {
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private ChatGroup[] chats;

    protected override async Task OnInitializedAsync()
    {
        chats = (await Chats.All()).ToArray();
    }
}

